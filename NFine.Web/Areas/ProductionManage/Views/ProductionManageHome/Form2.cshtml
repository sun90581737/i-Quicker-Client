@{
    ViewBag.Title = "生管主页/产能/负载";
    Layout = "~/Views/Shared/_Index.cshtml";
}
<script src="~/Content/js/echarts/4.3/echarts.js"></script>
<link href="~/Content/js/pages/AdminLTE.css" rel="stylesheet" />
<link href="~/Content/js/pages/AdminLTE.min.css" rel="stylesheet" />
<script>
    window.onload = function () {
        loadTwo();
    }
    function selectType(obj) {
        loadTwo();
    }
    function loadTwo() {
        var listDeviceType = new Array();
        var listDeviceName = new Array();
        var listAll = new Array();
        var CdatesColour = new Array();//产能颜色
        var FdatesColour = new Array();//负荷颜色
        var keyValue = $('#Types_id option:selected').val();
        $.ajax({
            url: "/ProductionManage/ProductionManageHome/GetDataPMHomeCapacityLoad",
            data: { keyValue: keyValue },
            dataType: "json",
            async: false,
            success: function (da) {
                $(da).each(function (index, item) {
                    if (item.DeviceName == "产能") {
                        CdatesColour.push(item.Colour);
                    } else if (item.DeviceName == "负荷") {
                        FdatesColour.push(item.Colour);
                    }
                    listDeviceType.push(item.DeviceType);
                    listDeviceName.push(item.DeviceName);
                    listAll.push(item);
                })
            }
        })

        $.unique(listDeviceType);
        $.unique(listDeviceName.sort());

        var series = [];
        $.each(listDeviceName, function (index, value) {
            var tempName = new Array();
            var tempArry = new Array();
            $.each(listAll, function (index1, value1) {
                if (value == value1.DeviceName) {
                    tempName = value1.DeviceName;
                    tempArry.push(value1.Number);
                }
            });
            series.push({
                name: tempName,
                type: 'bar',
                label: labelOption,
                itemStyle: {
                    normal: {
                        // 定制显示（按顺序）
                        color: function (params) {
                            var colorList = tempName == "产能" ? CdatesColour : FdatesColour;
                            return colorList[params.dataIndex]
                        }
                    },
                },
                data: tempArry
            })
        });

        var myChart = echarts.init(document.getElementById('chart2'));

        var app = {};
        var posList = [
        'left', 'right', 'top', 'bottom',
        'inside',
        'insideTop', 'insideLeft', 'insideRight', 'insideBottom',
        'insideTopLeft', 'insideTopRight', 'insideBottomLeft', 'insideBottomRight'
        ];

        app.configParameters = {
            rotate: {
                min: -90,
                max: 90
            },
            align: {
                options: {
                    left: 'left',
                    center: 'center',
                    right: 'right'
                }
            },
            verticalAlign: {
                options: {
                    top: 'top',
                    middle: 'middle',
                    bottom: 'bottom'
                }
            },
            position: {
                options: echarts.util.reduce(posList, function (map, pos) {
                    map[pos] = pos;
                    return map;
                }, {})
            },
            distance: {
                min: 0,
                max: 100
            }
        };

        app.config = {
            rotate: 90,
            align: 'left',
            verticalAlign: 'middle',
            position: 'insideBottom',
            distance: 15,
            onChange: function () {
                var labelOption = {
                    normal: {
                        rotate: app.config.rotate,
                        align: app.config.align,
                        verticalAlign: app.config.verticalAlign,
                        position: app.config.position,
                        distance: app.config.distance
                    }
                };
                myChart.setOption({
                    series: [{
                        label: labelOption
                    }, {
                        label: labelOption
                    }, {
                        label: labelOption
                    }, {
                        label: labelOption
                    }]
                });
            }
        };

        var labelOption = {
            show: true,
            position: app.config.position,
            distance: app.config.distance,
            align: app.config.align,
            verticalAlign: app.config.verticalAlign,
            rotate: app.config.rotate,
            formatter: '{c}  {name|{a}}',
            fontSize: 16,
            rich: {
                name: {
                    textBorderColor: '#fff'
                }
            }
        };

        option = {
            color: ['#6cce8f', '#e5323e'],
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'shadow'
                }
            },
            legend: {
                data: listDeviceName
            },
            toolbox: {
                show: true,
                orient: 'vertical',
                left: 'right',
                top: 'center',
                feature: {
                    mark: { show: true },
                    dataView: { show: true, readOnly: false },
                    magicType: { show: true, type: ['line', 'bar', 'stack', 'tiled'] },
                    restore: { show: true },
                    saveAsImage: { show: true }
                }
            },
            xAxis: [
                {
                    type: 'category',
                    axisTick: { show: false },
                    data: listDeviceType,
                    axisLabel: {
                        //X轴刻度配置
                        interval: 0 //0：表示全部显示不间隔；auto:表示自动根据刻度个数和宽度自动设置间隔个数
                        , rotate: 30
                    }
                }
            ],
            yAxis: [
                {
                    type: 'value'
                }
            ],
            series: series
        };
        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option, true);
    }
</script>
<body>
    <div class="row">
        <section class="col-lg-6 connectedSortable" style="width:100%">
            <div class="">
                <div class="box-header with-border">
                    <h4 class="box-title">产能/负载</h4>
                    <select id="Types_id" name="Types" style="border: solid 1px #000;" onchange="selectType(this)">
                        <option value="1" selected="selected">一周</option>
                        <option value="2">两周</option>
                        <option value="3">三周</option>
                        <option value="4">一个月</option>
                        <option value="5">半年</option>
                        <option value="6">一年</option>
                    </select>
                </div>
                <div class="tab-content">
                    <div id="chart2" style="height:700px;"></div>
                </div>
            </div>
        </section>
    </div>
</body>
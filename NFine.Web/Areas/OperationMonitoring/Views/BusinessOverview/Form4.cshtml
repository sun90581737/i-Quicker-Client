@{
    ViewBag.Title = "经营概览/客户分布";
    Layout = "~/Views/Shared/_Index.cshtml";
}

<script src="~/Content/js/echarts/4.3/echarts.js"></script>
<script src="~/Content/js/pages/world.js"></script>
<script src="~/Content/js/bootstrap/bootstrap.js"></script>
<link href="~/Content/js/bootstrap/bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/js/pages/AdminLTE.css" rel="stylesheet" />
@*<link href="~/Content/js/pages/AdminLTE.min.css" rel="stylesheet" />*@
<link href="~/Content/js/pages/app.css" rel="stylesheet" />

<script src="~/Content/js/d3/d3.min.js"></script>
<script src="~/Content/js/d3/d3.layout.cloud.js"></script>
<script>
    window.onload = function () {
        loadFour();
        loadFive();
    }
    function loadFive() {
        var myChart = echarts.init(document.getElementById('chart4b'));
        var data = [[{ name: '北美洲', value: 0 }], [{ name: '南美洲', value: 0 }], [{ name: '非洲', value: 0 }], [{ name: '欧洲', value: 0 }], [{ name: '大洋洲', value: 0 }], [{ name: '印度', value: 0 }], [{ name: '中国', value: 1 }]]
        var geoCoordMap = { '北美洲': [-101.670961, 41.103997], '南美洲': [-58.842054, -11.895087], '非洲': [22.106051, 14.099049], '欧洲': [15.777381, 49.971800], '大洋洲': [132.637011, -25.596128], '印度': [78.475369, 22.934290], '中国': [113.651000, 39.526776] };
        var convertData = function (data) {
            var res = [];
            for (var i = 0; i < data.length; i++) {
                var dataItem = data[i];
                var fromCoord = geoCoordMap[dataItem[0].name];
                var toCoord = [116.46, 39.92];
                if (fromCoord && toCoord) {
                    res.push([{
                        coord: fromCoord,
                        value: dataItem[0].value
                    }, {
                        coord: toCoord,
                    }]);
                }
            }
            return res;
        };

        var series = [];
        [['北京', data]].forEach(function (item, i) {
            console.log(item);
            series.push({
                type: 'lines', zlevel: 2,
                effect: { show: true, period: 4, trailLength: 0.02, symbol: 'arrow', symbolSize: 5, },
                lineStyle: { normal: { width: 1, opacity: 1, curveness: .3, color: '#00fefe' } },
                data: convertData(item[1])
            }, {
                type: 'effectScatter', coordinateSystem: 'geo', zlevel: 2,
                rippleEffect: { period: 4, brushType: 'stroke', scale: 4 },
                label: {
                    normal: {
                        show: true, position: 'right', offset: [5, 0], fontSize: 15,
                        formatter: function (params) { return params.data.name; }
                    },
                    emphasis: { show: true }
                },
                symbol: 'circle',
                symbolSize: function (val) {
                    return 6 + val[2] * 5;
                },
                itemStyle: { normal: { show: false, color: '#00fefe' } },
                data: item[1].map(function (dataItem) {
                    return { name: dataItem[0].name, value: geoCoordMap[dataItem[0].name].concat([dataItem[0].value]) };
                }),
            },
              {
                  type: 'scatter', coordinateSystem: 'geo', zlevel: 2,
                  rippleEffect: { period: 4, brushType: 'stroke', scale: 4 },
                  label: {
                      normal: {
                          show: true, position: 'right',
                          color: '#0f0', formatter: '{b}',
                          textStyle: { color: '#0f0' }
                      },
                      emphasis: { show: true, color: '#f60' }
                  },
              }
            );
        }
        );

        option = {
            backgroundColor: 'transparent',
            tooltip: {
                trigger: 'item',
                backgroundColor: 'rgba(25,25,44,0.5)',
                textStyle: { color: '#e1e2e5' }
            },

            geo: {
                map: 'world',
                zoom: 1.2,
                label: {
                    emphasis: {
                        show: false
                    }
                },
                roam: true,
                itemStyle: {
                    normal: {
                        areaColor: '#58462f',
                        borderColor: '#24273e'
                    },
                    emphasis: {
                        areaColor: '#17a086'
                    }
                }
            },

            series: series
        };
        myChart.setOption(option);
        window.onresize = echart.resize;
        function resize(width, height) {
            var chart = document.getElementById('chart4b');
            chart.style.width = width + "px";
            chart.style.height = height + "px";
            echart.resize();
        }
    }
    function loadFour() {
        var listName = new Array();
        var str = [];
        $.ajax({
            url: "/OperationMonitoring/BusinessOverview/GetDataKeyCustomers",
            dataType: "json",
            async: false,
            success: function (data) {
                $(data).each(function (index, item) {
                    var str3 = new Object();
                    //默认加一条空值，防止.data(nodes.slice(1));获取不到。
                    if (index == "0") {
                        listName.unshift("");
                        str3.name = "";
                        str3.val = 0;
                        str[index] = str3;
                    }
                    listName.push(item.Name);
                    str3.name = item.Name;
                    str3.val = item.Number * 1000 + 20000;
                    str[index + 1] = str3;
                })
            }
        });
        var fill = d3.scale.category20();
        var width = 650,
            height = 280;
        var data = str

        //[
        //            { "name": "河北", "val": "62356" },
        //            {"name":"河南","val":"89565"},
        //            {"name":"广东","val":"63658"},
        //            {"name":"江西","val":"68525"},
        //            {"name":"上海","val":"36585"},
        //            {"name":"广西","val":"66589"},
        //            {"name":"云南","val":"86955"},
        //            {"name":"江苏","val":"75565"},
        //            {"name":"陕西","val":"73668"},
        //            {"name":"湖南","val":"95684"}
        //]
        //range（节点数目），radius大小
        var nodes = d3.range(listName.length).map(function (i) {
            var data1 = {
                radius: parseFloat(data[i].val) / 2000,
                value: parseFloat(data[i].val),
                label: data[i].name
            };
            return data1;


        }),
            root = nodes[0],
            color = d3.scale.category10();

        root.radius = 0;
        root.fixed = true;

        //力导向
        var force = d3.layout.force()
            .gravity(0.01)  //中心产生重力（通俗点说就是改变圆球之间的距离），数值越大挨得越近，0则没有重力
        //    .charge(function(d, i) { return i ? 0 : -2000; })
            .nodes(nodes)
            .size([width, height]);

        force.start();
        var padding = { left: -150, right: -10, top: 0, bottom: -10 };

        var svg = d3.select("#d3_temp").append("svg")
            .attr("width", width)
            .attr("height", height);

        //var ball = svg.selectAll("circle")
        //  .data(nodes.slice(1))
        //  .enter().append("circle")
        //  .attr("r", function(d) { return d.radius; })
        //  .style("fill", function(d, i) { return color(i % 3); })
        //  .append("text")
        //  .attr("class","text")
        //  .text(d => d.label)
        //  .attr("font-size", "30px")
        //  .attr("fill", "red")
        //  .attr("transform","translate(" + padding.left + "," + padding.top + ")");


        var ball = svg.selectAll("g")
            .data(nodes.slice(1));

        var elemEnter = ball.enter()
                           .append("g")
                           .attr("transform", "translate(" + padding.left + "," + padding.top + ")");

        var circle = elemEnter.append("circle")
                              .attr("r", function (d) { return d.radius; })
        //.style("fill", function(d, i) { return color(i % 1); })
         .style("fill", function (d, i) { return fill(i); })//fill 在前面15行定义为颜色集

        elemEnter.append("text")
        .attr("class", "text")
        .text(d => d.label)
        .attr("font-size", "14px")
        .attr("fill", "#fff")




        force.on("tick", function (e) {
            var q = d3.geom.quadtree(nodes),
                  i = 0,
                  n = nodes.length;

            //while (++i < n) q.visit(collide(nodes[i]));
            svg.selectAll("circle")
                  .attr("cx", function (d) { return d.x; })
                  .attr("cy", function (d) { return d.y; });
            svg.selectAll("text")
                  .attr("x", function (d) { return d.x - 16; })
                  .attr("y", function (d) { return d.y + 6; });

            force.resume();

        });

        svg.on("mousemove", function () {
            var p1 = d3.mouse(this);
            root.px = p1[0];
            root.py = p1[1];
            force.resume();
        });

        function collide(node) {
            var r = node.radius + 16,
                  nx1 = node.x - r,
                  nx2 = node.x + r,
                  ny1 = node.y - r,
                  ny2 = node.y + r;
            return function (quad, x1, y1, x2, y2) {
                if (quad.point && (quad.point !== node)) {
                    var x = node.x - quad.point.x,
                        y = node.y - quad.point.y,
                        l = Math.sqrt(x * x + y * y),
                        r = node.radius + quad.point.radius;
                    if (l < r) {
                        l = (l - r) / l * .5;
                        node.x -= x *= l;
                        node.y -= y *= l;
                        quad.point.x += x;
                        quad.point.y += y;
                    }
                }
                return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;
            };
        }
    }
</script>
<div class="row">
    <section class="col-lg-6 connectedSortable" style="width:100%">
        <div class="box box-default">
            <div class="box-header with-border">
                <h4 class="box-title" style="color:#474242;font-size:16px;font-weight:700;">客户分布</h4>
            </div>
            <div class="tab-content" style="height:100%;">
                <div style="float:left;width:60%">
                    <div style="text-align:center;font-size:13px;color:#808080;">全球分布</div>
                    <div id="chart4b" style="height:600px; "></div>
                </div>
                <div style="margin-left:60%;width:auto;">
                    <div style="text-align:center;font-size:13px;color:#808080;">主要客户</div>
                    <div id="chart4a" style="height:600px;background: url('../../../../Content/js/pages/img/bk.png') 0 0 / 100% 100% no-repeat ; background-size: 100% 99%;">
                        <div id="d3_temp" class="test">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>